--- origsrc/anjuta-3.0.2.0/plugins/am-project/am-project.c	2011-05-23 14:02:45.000000000 -0500
+++ src/anjuta-3.0.2.0/plugins/am-project/am-project.c	2011-05-29 22:38:39.573250400 -0500
@@ -1651,7 +1651,7 @@ amp_project_is_loaded (AmpProject *proje
 	return project->loading == 0;
 }
 
-gint
+G_MODULE_EXPORT gint
 amp_project_probe (GFile *file,
 	    GError     **error)
 {
@@ -1805,7 +1805,7 @@ foreach_node_move (AnjutaProjectNode *g_
 	}
 }
 
-gboolean
+G_MODULE_EXPORT gboolean
 amp_project_move (AmpProject *project, const gchar *path)
 {
 	GFile *new_file;
@@ -1865,7 +1865,7 @@ amp_project_move (AmpProject *project, c
 }
 
 /* Dump file content of corresponding node */
-gboolean
+G_MODULE_EXPORT gboolean
 amp_project_dump (AmpProject *project, AnjutaProjectNode *node)
 {
 	gboolean ok = FALSE;
@@ -1886,7 +1886,7 @@ amp_project_dump (AmpProject *project, A
 }
 
 
-AmpProject *
+G_MODULE_EXPORT AmpProject *
 amp_project_new (GFile *file, GError **error)
 {
 	AmpProject *project;
@@ -1966,7 +1966,7 @@ amp_project_add_file (AmpProject *projec
 	g_object_weak_ref (G_OBJECT (token), remove_config_file, project);
 }
 
-gboolean
+G_MODULE_EXPORT gboolean
 amp_project_is_busy (AmpProject *project)
 {
 	if (project->queue == NULL) return FALSE;
@@ -2458,7 +2458,7 @@ G_DEFINE_DYNAMIC_TYPE_EXTENDED (AmpProje
                                 G_IMPLEMENT_INTERFACE_DYNAMIC (IANJUTA_TYPE_PROJECT,
                                                                iproject_iface_init));
 
-void
+G_MODULE_EXPORT void
 amp_project_register (GTypeModule *module)
 {
 	amp_node_register (module);
--- origsrc/anjuta-3.0.2.0/plugins/am-project/am-project.h	2011-05-23 14:02:45.000000000 -0500
+++ src/anjuta-3.0.2.0/plugins/am-project/am-project.h	2011-05-29 22:49:55.836930400 -0500
@@ -54,7 +54,7 @@ struct _AmpProjectClass {
 
 typedef struct _AmpProperty AmpProperty;
 
-GType         amp_project_get_type (void);
+G_MODULE_EXPORT GType         amp_project_get_type (void);
 AmpProject   *amp_project_new      (GFile *file, GError **error);
 
 void amp_project_register (GTypeModule *module);
--- origsrc/anjuta-3.0.2.0/plugins/symbol-db/symbol-db-engine-core.c	2011-04-03 11:05:35.000000000 -0500
+++ src/anjuta-3.0.2.0/plugins/symbol-db/symbol-db-engine-core.c	2011-05-30 01:04:56.100239000 -0500
@@ -2326,7 +2326,7 @@ symbol_db_engine_new (const gchar * ctag
 	return sdbe;
 }
 
-SymbolDBEngine* 
+G_MODULE_EXPORT SymbolDBEngine* 
 symbol_db_engine_new_full (const gchar * ctags_path, const gchar * database_name)
 {
 	SymbolDBEngine* dbe;
@@ -2533,7 +2533,7 @@ symbol_db_engine_file_exists (SymbolDBEn
 	return TRUE;
 }
 
-gboolean 
+G_MODULE_EXPORT gboolean 
 symbol_db_engine_close_db (SymbolDBEngine *dbe)
 {
 	SymbolDBEnginePriv *priv;
@@ -2655,7 +2655,7 @@ sdb_engine_check_db_version_and_upgrade
 	return FALSE;
 }
 
-gint
+G_MODULE_EXPORT gint
 symbol_db_engine_open_db (SymbolDBEngine * dbe, const gchar * base_db_path,
 						  const gchar * prj_directory)
 {
@@ -2869,7 +2869,7 @@ symbol_db_engine_project_exists (SymbolD
 }
 
 /* ~~~ Thread note: this function locks the mutex ~~~ */ 
-gboolean
+G_MODULE_EXPORT gboolean
 symbol_db_engine_add_new_project (SymbolDBEngine * dbe, const gchar * workspace,
 								  const gchar * project, const gchar* version)
 {
@@ -3259,7 +3259,7 @@ symbol_db_engine_add_new_files_async (Sy
 	return res;
 }
 
-gint
+G_MODULE_EXPORT gint
 symbol_db_engine_add_new_files_full_async (SymbolDBEngine * dbe, 
 								const gchar * project_name,
     							const gchar * project_version,
